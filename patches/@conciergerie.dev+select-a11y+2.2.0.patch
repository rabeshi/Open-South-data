diff --git a/node_modules/@conciergerie.dev/select-a11y/dist/main.js b/node_modules/@conciergerie.dev/select-a11y/dist/main.js
index 9b58221..d7f2281 100644
--- a/node_modules/@conciergerie.dev/select-a11y/dist/main.js
+++ b/node_modules/@conciergerie.dev/select-a11y/dist/main.js
@@ -189,10 +189,10 @@ class $21b19656d700fd08$var$Select {
         suggestions.classList.add('select-a11y-suggestions');
         suggestions.id = `a11y-${this.id}-suggestions`;
         container.innerHTML = `
-      <p id="a11y-usage-${this.id}-js" class="sr-only">${this._options.text.help}</p>
-      <label for="a11y-${this.id}-js" class="sr-only">${this._options.text.placeholder}</label>
-      <input type="search" id="a11y-${this.id}-js" class="${this.el.className}" autocomplete="off" autocapitalize="off" spellcheck="false" placeholder="${this._options.text.placeholder}" aria-describedby="a11y-usage-${this.id}-js">
-    `;
+            <p id="a11y-usage-${this.id}-js" class="sr-only">${this._options.text.help}</p>
+            <label for="a11y-${this.id}-js" style="display:block;margin-bottom:6px">${this._options.text.placeholder}</label>
+            <input type="search" id="a11y-${this.id}-js" class="${this.el.className}" autocomplete="off" autocapitalize="off" spellcheck="false" aria-describedby="a11y-usage-${this.id}-js">
+        `;
         container.appendChild(suggestions);
         this.list = suggestions;
         /** @type {HTMLInputElement} */ this.input = container.querySelector('input');
diff --git a/node_modules/@conciergerie.dev/select-a11y/dist/module.js b/node_modules/@conciergerie.dev/select-a11y/dist/module.js
index 9327527..fcb2396 100644
--- a/node_modules/@conciergerie.dev/select-a11y/dist/module.js
+++ b/node_modules/@conciergerie.dev/select-a11y/dist/module.js
@@ -57,6 +57,7 @@ class $5a3b80354f588438$var$Select {
         const passedOptions = Object.assign({}, options);
         const textOptions = Object.assign({}, $5a3b80354f588438$var$text, passedOptions.text);
         delete passedOptions.text;
+        this.isTyping = false;
         this._defaultSearch = this._defaultSearch.bind(this);
         this._options = Object.assign({
             text: textOptions,
@@ -72,6 +73,7 @@ class $5a3b80354f588438$var$Select {
         this._handleClear = this._handleClear.bind(this);
         this._handleReset = this._handleReset.bind(this);
         this._handleSuggestionClick = this._handleSuggestionClick.bind(this);
+        this._handleSuggestionKeyDown = this._handleSuggestionKeyDown.bind(this);
         this._positionCursor = this._positionCursor.bind(this);
         this._removeOption = this._removeOption.bind(this);
         this.setText = this.setText.bind(this);
@@ -122,6 +124,8 @@ class $5a3b80354f588438$var$Select {
         this.input.addEventListener('input', this._handleInput);
         this.input.addEventListener('focus', this._positionCursor, true);
         this.list.addEventListener('click', this._handleSuggestionClick);
+        this.list.addEventListener('keydown', this._handleSuggestionKeyDown);
+        this.list.addEventListener('keypress', this._handleSuggestionKeyDown);
         this.wrap.addEventListener('keydown', this._handleKeyboard);
         document.addEventListener('blur', this._handleFocus, true);
         if (this.el.form) this.el.form.addEventListener('reset', this._handleReset);
@@ -179,10 +183,10 @@ class $5a3b80354f588438$var$Select {
         suggestions.classList.add('select-a11y-suggestions');
         suggestions.id = `a11y-${this.id}-suggestions`;
         container.innerHTML = `
-      <p id="a11y-usage-${this.id}-js" class="sr-only">${this._options.text.help}</p>
-      <label for="a11y-${this.id}-js" class="sr-only">${this._options.text.placeholder}</label>
-      <input type="search" id="a11y-${this.id}-js" class="${this.el.className}" autocomplete="off" autocapitalize="off" spellcheck="false" placeholder="${this._options.text.placeholder}" aria-describedby="a11y-usage-${this.id}-js">
-    `;
+            <p id="a11y-usage-${this.id}-js" class="sr-only">${this._options.text.help}</p>
+            <label for="a11y-${this.id}-js" style="display:block;margin-bottom:6px">${this._options.text.placeholder}</label>
+            <input type="search" id="a11y-${this.id}-js" class="${this.el.className}" autocomplete="off" autocapitalize="off" spellcheck="false" aria-describedby="a11y-usage-${this.id}-js">
+        `;
         container.appendChild(suggestions);
         this.list = suggestions;
         /** @type {HTMLInputElement} */ this.input = container.querySelector('input');
@@ -301,8 +305,14 @@ class $5a3b80354f588438$var$Select {
         if (!this.open) return;
         clearTimeout(this._focusTimeout);
         this._focusTimeout = setTimeout(()=>{
-            if (!this.overlay.contains(document.activeElement) && this.button !== document.activeElement) this._toggleOverlay(false, document.activeElement === document.body);
-            else if (document.activeElement === this.input) // reset the focus index
+            if (!this.overlay.contains(document.activeElement) && this.button !== document.activeElement) {
+                if(this.isTyping) {
+                    this.isTyping = false;
+                    this.input.focus();
+                } else {
+                    this._toggleOverlay(false, document.activeElement === document.body);
+                }
+            } else if (document.activeElement === this.input) // reset the focus index
             this.focusIndex = null;
             else {
                 const optionIndex = this.suggestions.indexOf(document.activeElement);
@@ -333,6 +343,41 @@ class $5a3b80354f588438$var$Select {
         const shouldClose = this.multiple && event.metaKey ? false : true;
         this._toggleSelection(optionIndex, shouldClose);
     }
+    _handleSuggestionKeyDown(event) {
+        /**
+         * Added method to transfer keydowns from suggestions to the search
+         */
+
+        if(this.input === undefined) {
+            console.log("Input not loaded");
+            return;
+        }
+
+        if(event.key) {
+            // For some hard to find reason (inside _handleInput->_fillSuggestions), we will lose the focus to body element.
+            // After losing the focus to the body element, the "blur" listener would toggle off the overlay.
+            // A solution would be temporarily remove the blur listener and reset it with a timeout.
+            // Another solution is adding this flag that we will read on the blur listener.
+            this.isTyping = true; 
+            
+            // From keypress
+            if(event.key.length === 1) {
+                // Printable chars, including space
+                this.input.value = this.input.value + event.key
+                this._handleInput()
+                event.preventDefault(); // So the key will not be typed twice
+            }
+    
+            // From keydown
+            else if(event.key === "Backspace") {
+                if(this.input.value.length > 0) {
+                    this.input.value = this.input.value.substring(0, this.input.value.length - 1)
+                    this._handleInput()
+                }
+            }
+        }
+
+    }
     _handleInput() {
         // prevent event fireing on focus and blur
         if (this.search === this.input.value) return;
@@ -366,7 +411,7 @@ class $5a3b80354f588438$var$Select {
             this._moveIndex(-1);
             return;
         }
-        if (!this.multiple && event.keyCode === 13 || event.keyCode === 32) {
+        if (!this.multiple && event.keyCode === 13) {
             event.preventDefault();
             this._toggleSelection(parseInt(option.getAttribute('data-index'), 10), this.multiple ? false : true);
         }
diff --git a/node_modules/@conciergerie.dev/select-a11y/src/select-a11y.js b/node_modules/@conciergerie.dev/select-a11y/src/select-a11y.js
index 98fe106..048a456 100644
--- a/node_modules/@conciergerie.dev/select-a11y/src/select-a11y.js
+++ b/node_modules/@conciergerie.dev/select-a11y/src/select-a11y.js
@@ -228,8 +228,8 @@ class Select {
 
     container.innerHTML = `
       <p id="a11y-usage-${this.id}-js" class="sr-only">${this._options.text.help}</p>
-      <label for="a11y-${this.id}-js" class="sr-only">${this._options.text.placeholder}</label>
-      <input type="search" id="a11y-${this.id}-js" class="${this.el.className}" autocomplete="off" autocapitalize="off" spellcheck="false" placeholder="${this._options.text.placeholder}" aria-describedby="a11y-usage-${this.id}-js">
+      <label for="a11y-${this.id}-js" style="display:block;margin-bottom:6px">${this._options.text.placeholder}</label>
+      <input type="search" id="a11y-${this.id}-js" class="${this.el.className}" autocomplete="off" autocapitalize="off" spellcheck="false" aria-describedby="a11y-usage-${this.id}-js">
     `;
 
     container.appendChild(suggestions);
